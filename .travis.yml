dist: xenial
sudo: required
language: bash

services:
  - docker

# Don't build release tags. This avoids publish conflicts because the version commit exists both on master and the release tag.
# See https://github.com/travis-ci/travis-ci/issues/1532
branches:
  #  except:
  #  - /^[0-9]/

  # safelist
#  only:
#    - master
#    - develop
#    - release
#    - /^[0-9]/
  only:
    - master
    - develop
    - release
    - /^((rc|v|version|release|tag)(-)?)?([0-9\.]+)((-)?(patch|beta|alpha))?$/

env:
  matrix:
    - VERSION=8.10 VARIANT=tomcat

# before install any component
before_install:
  # Parameters used during release
  - git config user.name "$GH_USER"
  - git config user.email "$GH_USER_EMAIL"

  # setup https authentication credentials, used by ./mvnw release:prepare
  - git config credential.helper "store --file=.git/credentials"
  - echo "https://$GH_TOKEN:@github.com" > .git/credentials

  # Update all git submodule (No need this manual submodule update ...)
  ##- git submodule init && git submodule update --init --recursive --remote --merge

  # Install any required components
  #install:
  #  - git clone https://github.com/docker-library/official-images.git ~/official-images

before_script:
  - env | sort
#  - cd "dockerfiles/$VERSION"
  - IMAGE_BASE="${ACCOUNT_ID:-djantaio}/nuxeo-server"
  - IMAGE_TAG="${IMAGE_BASE}:$VERSION"
  - IMAGE_BRANCH="${IMAGE_BASE}:$VERSION-${TRAVIS_BRANCH}"
  - IMAGE_TAG_VARIANT="${IMAGE_BASE}:$VERSION-$VARIANT"
  - IMAGE_BRANCH_VARIANT="${IMAGE_BASE}:$VERSION-$VARIANT-${TRAVIS_BRANCH}"

  # Making sure we login ...
  - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USER" --password-stdin

script:
  - docker --debug build -t "$IMAGE_TAG" -f "dockerfiles/$VERSION/Dockerfile" .
  #- travis_wait 30 travis_retry ~/official-images/test/run.sh "$IMAGE_TAG"
after_script:
  - docker images

stages:
  - name: develop
    if: (branch = develop AND type != pull_request) AND commit_message !~ /^(prepare release ([0-9\.]+))$/
  - name: snapshot
    if: branch = master AND type != pull_request AND commit_message !~ /^(prepare release ([0-9\.]+))$/
  - name: release
    ## Validator: https://regex101.com/
    if: tag =~ /^((rc|v|version|release|tag)(-)?)?([0-9\.]+)((-)?(patch|beta|alpha))?$/
#    if: tag =~ /^[0-9\.]+$/

jobs:
  include:
  - stage: develop
    name: "Build and Unit Testing the develop & PR branch"
    install: true
    before_deploy:
      - docker tag "$IMAGE_TAG" "$IMAGE_BRANCH"
    deploy:
      provider: script
      script: docker push "$IMAGE_BRANCH" #&& docker push "${IMAGE_NAME}:${git_sha}-develop"
      on:
        branch: develop
  - stage: snapshot
    name: "Deploy Snapshot to Maven repo"
    install: true
    script:
      - echo "Not Yet Implemented ..."
  - stage: release
    name: "Release, Tag & push the released version"
    install: true
    script:
      - echo "Not Yet Implemented ..."

notifications:
  email:
    recipients:
      - "$GH_USER_EMAIL"
    on_success: change  # default: change
    on_failure: always  # default: always
